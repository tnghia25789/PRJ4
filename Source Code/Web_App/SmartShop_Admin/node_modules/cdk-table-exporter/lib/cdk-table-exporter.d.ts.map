{"version":3,"file":"cdk-table-exporter.d.ts","sources":["cdk-table-exporter.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, Renderer2 } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ExportType } from './export-type';\r\nimport { ExcelOptions, Options, TxtOptions } from './options';\r\nimport { DataExtractorService } from './services/data-extractor.service';\r\nimport { Exporter } from './services/exporters/exporter';\r\nimport { ServiceLocatorService } from './services/service-locator.service';\r\n/**\r\n * Exporter class for CdkTable. Abstracts the varying behaviors among different CdkTable implementations.\r\n */\r\nexport declare abstract class CdkTableExporter {\r\n    protected renderer: Renderer2;\r\n    private serviceLocator;\r\n    private dataExtractor;\r\n    protected _cdkTable: any;\r\n    private _exporterService;\r\n    hiddenColumns?: Array<number>;\r\n    exporter?: Exporter<Options>;\r\n    exportCompleted: EventEmitter<void>;\r\n    exportStarted: EventEmitter<void>;\r\n    /**\r\n     * Data array which is extracted from nativeTable\r\n     */\r\n    private _data;\r\n    private _isIterating;\r\n    private _initialPageIndex;\r\n    private _isExporting;\r\n    private _subscription;\r\n    private _options?;\r\n    private _selectedRows?;\r\n    constructor(renderer: Renderer2, serviceLocator: ServiceLocatorService, dataExtractor: DataExtractorService, _cdkTable: any);\r\n    /**\r\n     * Must return the number of pages of the table\r\n     */\r\n    abstract getPageCount(): number;\r\n    /**\r\n     * Must return the number of items to display on a page\r\n     */\r\n    abstract getPageSize(): number;\r\n    /**\r\n     * Must return the index of the current page that's displayed\r\n     */\r\n    abstract getCurrentPageIndex(): number;\r\n    /**\r\n     * Must return the total number of items in the table\r\n     */\r\n    abstract getTotalItemsCount(): number;\r\n    /**\r\n     * When called, the CdkTable should render the rows inside the page whose index given as parameter\r\n     * @param index page index\r\n     */\r\n    abstract goToPage(index: number): void;\r\n    /**\r\n     * Must return an observable that notifies the subscribers about page changes\r\n     */\r\n    abstract getPageChangeObservable(): Observable<any>;\r\n    /**\r\n     * Triggers page event chain thus extracting and exporting all the rows in nativetables in pages\r\n     */\r\n    exportTable(exportType?: ExportType | 'xls' | 'xlsx' | 'csv' | 'txt' | 'json' | 'other', options?: Options | ExcelOptions | TxtOptions): void;\r\n    toggleRow(index: number): void;\r\n    /**\r\n     * This event will clear rows selection done using toggleRow functionality\r\n     */\r\n    resetToggleRows(): void;\r\n    private toggleOn;\r\n    private toggleOff;\r\n    private isToggleOn;\r\n    private loadExporter;\r\n    private exportWithPagination;\r\n    private exportSinglePage;\r\n    private extractDataOnCurrentPage;\r\n    private getSelectedRows;\r\n    private isSelectiveExport;\r\n    private isMasterToggleOn;\r\n    private isMasterToggleOff;\r\n    private compareSelectedRowCount;\r\n    private initPageHandler;\r\n    private exportExtractedData;\r\n    private extractSpecialRows;\r\n    private extractTableHeader;\r\n    private extractTableFooter;\r\n    private hasNextPage;\r\n    private nextPage;\r\n    private getPaginatedRowIndex;\r\n}\r\n"]}